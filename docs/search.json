[{"path":"https://github.com/yuxiaochen11/LineageCast/articles/C.elegans.html","id":"load-package-functions","dir":"Articles","previous_headings":"","what":"Load package functions","title":"C.elegans","text":"","code":"library(FateScape) library(PATH) library(phangorn) library(TreeTools) library(slingshot) library(igraph) library(ggplot2) library(tidytree) library(RColorBrewer) library(ggtree) library(ggtreeExtra) library(mclust, quietly = TRUE)"},{"path":[]},{"path":"https://github.com/yuxiaochen11/LineageCast/articles/C.elegans.html","id":"load-tree-graph-and-metadata","dir":"Articles","previous_headings":"Input Real Cell Division Tree and RNA Read Counts","what":"Load Tree Graph and Metadata","title":"C.elegans","text":"","code":"graph <- read_graph(\"data/C.elegans/cell_lineage_tree.gml\", format = \"gml\") MetaData <- read.csv(\"data/C.elegans/MetaData.csv\")"},{"path":"https://github.com/yuxiaochen11/LineageCast/articles/C.elegans.html","id":"extract-tip-labels-and-edges","dir":"Articles","previous_headings":"Input Real Cell Division Tree and RNA Read Counts","what":"Extract Tip Labels and Edges","title":"C.elegans","text":"","code":"# Extract tip labels at time == 2000 TipLabels <- V(graph)$name[V(graph)$time == 2000]  # Get raw edge list from the graph raw_edges <- get.edgelist(graph, names = TRUE)  # Remove nodes with only one child (if applicable) for (i in seq_along(unique(raw_edges[,1]))) {   par <- unique(raw_edges[,1])[i]   child <- raw_edges[raw_edges[,1] == par, 2]   if (length(child) == 1) {     index <- raw_edges[,1] != par   } } edges <- raw_edges[index, ]"},{"path":"https://github.com/yuxiaochen11/LineageCast/articles/C.elegans.html","id":"construct-real-phylogenetic-tree-from-graph","dir":"Articles","previous_headings":"Input Real Cell Division Tree and RNA Read Counts","what":"Construct real Phylogenetic Tree from Graph","title":"C.elegans","text":"","code":"# Set root time and extract time vector V(graph)$time_to_parent[1] <- 0 Time <- V(graph)$time_to_parent  # Generate Newick tree text and read the tree newick_text <- paste0(format_tree_newick(\"P0\", edges), \";\") phy_tree <- ape::read.tree(text = newick_text)  newick_text <- paste0(format_tree_newick_time(\"P0\", edges, Time), \";\") phy_tree <- ape::read.tree(text = newick_text)"},{"path":"https://github.com/yuxiaochen11/LineageCast/articles/C.elegans.html","id":"filter-and-process-rna-seq-data","dir":"Articles","previous_headings":"Input Real Cell Division Tree and RNA Read Counts","what":"Filter and Process RNA-Seq Data","title":"C.elegans","text":"","code":"# Filter tree tips based on MetaData ML <- MetaData$random_precise_lineage tips <- phy_tree$tip.label drops <- tips[!tips %in% ML] Celegans_tree <- ape::drop.tip(phy_tree, drops) Celegans_tree <- ape::chronos(Celegans_tree) ##  ## Setting initial dates... ## Fitting in progress... get a first set of estimates ##          (Penalised) log-lik = -28513163288  ## Optimising rates... dates... -28513163288  ## Optimising rates... dates... -20753.05  ## Optimising rates... dates... -20746.96 ##  ## log-Lik = -20736.35  ## PHIIC = 44179.98 # Process RNA-Seq counts ncells <- length(Celegans_tree$tip.label) ngenes <- 500 Leaves <- Celegans_tree$tip.label  # Standardize tip labels Celegans_tree$tip.label <- paste(\"cell\", 1:ncells, sep = \"_\") tree_ct <- Celegans_tree  # Create name index mapping original tip names to standardized IDs name_index <- data.frame(name = Leaves, id = paste(\"cell\", 1:ncells, sep = \"_\"))  for (i in 1:nrow(name_index)) {   a <- MetaData$cell.type[MetaData$random_precise_lineage == name_index$name[i]]   name_index$cell_type[i] <- names(table(a))[which.max(table(a))] } name_index$cell_type <- ifelse(name_index$cell_type == \"\", NA, name_index$cell_type)"},{"path":"https://github.com/yuxiaochen11/LineageCast/articles/C.elegans.html","id":"loading-and-process-count-matrix","dir":"Articles","previous_headings":"Input Real Cell Division Tree and RNA Read Counts","what":"Loading and Process Count Matrix","title":"C.elegans","text":"","code":"CountMatrix <- read.table(\"data/C.elegans/RNASeqData.csv\", sep = \",\") Count <- CountMatrix[2:nrow(CountMatrix), 4:ncol(CountMatrix)] CellType <- CountMatrix$V3[2:nrow(CountMatrix)] CellName <- CountMatrix$V2[2:nrow(CountMatrix)]  Counts <- Count[match(Leaves, CellName), ] CellTypes <- CellType[match(Leaves, CellName)] rownames(Counts) <- paste(\"cell\", 1:ncells, sep = \"_\") colnames(Counts) <- paste(\"gene\", 1:ngenes, sep = \"_\") gene <- t(Counts)"},{"path":[]},{"path":"https://github.com/yuxiaochen11/LineageCast/articles/C.elegans.html","id":"defining-state-lineages-and-prepare-data","dir":"Articles","previous_headings":"Constructing Cell State Tree (Slingshot)","what":"Defining State Lineages and Prepare Data","title":"C.elegans","text":"","code":"sce=SingleCellExperiment(assays=List(counts=gene)) pca=prcomp(log1p(Counts), scale. = FALSE) #log1p(x)=log(1+x) rd1=pca$x[,1:2] cl1=Mclust(rd1)$classification reducedDims(sce)=SimpleList(PCA = rd1) colData(sce)$GMM=cl1 sce=slingshot(sce, clusterLabels = 'GMM', reducedDim = 'PCA') state_lineages=slingLineages(sce) for (l in 1:length(state_lineages)) {   names(state_lineages)[l]=paste0(\"L\",l) } state_slingshot=data.frame(cell_id=paste(\"cell\",1:ncells,sep=\"_\"),cluster=as.character(cl1))"},{"path":"https://github.com/yuxiaochen11/LineageCast/articles/C.elegans.html","id":"visualization","dir":"Articles","previous_headings":"Constructing Cell State Tree (Slingshot)","what":"visualization","title":"C.elegans","text":"","code":"# Plot PCA/UMAP with clusters and trajectory lines plot(reducedDims(sce)$PCA, col = brewer.pal(9, \"Set1\")[sce$GMM], pch = 16, asp = 1) lines(SlingshotDataSet(sce), lwd = 2, col = \"black\") plot(reducedDims(sce)$PCA, col = brewer.pal(9, \"Set1\")[sce$GMM], pch = 16, asp = 1) lines(SlingshotDataSet(sce), lwd = 2, type = \"lineages\", col = \"black\") # Parameters N_char <- 12 ngenes <- 500 p_ds <- 0.2 r_n <- ceiling(N_char * 0.7)"},{"path":"https://github.com/yuxiaochen11/LineageCast/articles/C.elegans.html","id":"loading-simulated-intermediate-features-and-cifs","dir":"Articles","previous_headings":"Constructing Cell State Tree (Slingshot)","what":"Loading Simulated Intermediate Features and CIFs","title":"C.elegans","text":"","code":"load('data/C.elegans/cifs.RData')"},{"path":"https://github.com/yuxiaochen11/LineageCast/articles/C.elegans.html","id":"processing-simulated-barcode-data","dir":"Articles","previous_headings":"Constructing Cell State Tree (Slingshot)","what":"Processing Simulated Barcode Data","title":"C.elegans","text":"","code":"barcodes_all <- cifs[[7]] barcodes_initial <- barcodes_all[1:ncells, ] rownames(barcodes_initial) <- paste(\"cell\", 1:ncells, sep = \"_\") barcodes_dropout <- FateScape:::stochastic_dropout(barcodes_initial, p_ds)"},{"path":"https://github.com/yuxiaochen11/LineageCast/articles/C.elegans.html","id":"barcode-imputation-and-grouping-by-state-lineage","dir":"Articles","previous_headings":"","what":"Barcode Imputation and Grouping by State Lineage","title":"C.elegans","text":"","code":"barcodes <- dropout_imputation_alter(barcodes_dropout, N_char, ncells, ceiling(N_char * 0.8)) state <- state_slingshot  sl_info <- state_lineage_info(state_lineages, ncells, state, barcodes) state_lineage <- sl_info[[1]] cell_lineages <- sl_info[[2]] barcodes_lineages <- sl_info[[3]] state_labels_lineages <- sl_info[[4]]"},{"path":"https://github.com/yuxiaochen11/LineageCast/articles/C.elegans.html","id":"reconstructing-sub-cell-division-trees","dir":"Articles","previous_headings":"","what":"Reconstructing Sub-Cell Division Trees","title":"C.elegans","text":"","code":"Trees_initial <- initial_tree_construction(state_lineages, barcodes_lineages) refined_subtree <- subtree_refinement(Trees_initial, state_lineages, barcodes_lineages,                                         N_char, state_labels_lineages,                                         lambda1 = 0.1, lambda2 = 0.9,                                         maxIter = 100, repeat_time = 10) bestsubtree <- refined_subtree[[1]] bestsubtree <- drop_duplicated_tips(bestsubtree, barcodes_lineages, cell_lineages,                                     state_lineage, alpha = 1.5, beta = 1.5)"},{"path":"https://github.com/yuxiaochen11/LineageCast/articles/C.elegans.html","id":"decomposition-and-reassembly-of-subtrees","dir":"Articles","previous_headings":"","what":"Decomposition and reassembly of subtrees","title":"C.elegans","text":"","code":"subtrees_rootbar <- get_subtree_root_barcodes(bestsubtree, state, barcodes, length(state_lineages)) CM <- common_mutation_matrix(subtrees_rootbar) Nodes_rank <- subtrees_rank(CM)[[1]] Nodes_weight <- subtrees_rank(CM)[[2]]  subsubtrees <- decompose_subtrees(bestsubtree, state_slingshot, barcodes, length(state_lineages)) Tree_Merge <- merge_subcell_trees_ordered(CM, Nodes_rank, Nodes_weight, subsubtrees,                                           bind_tree_list = list(), nsubtree = 1) Tree_Groups <- group_subcell_trees(CM, Nodes_rank, Nodes_weight, subsubtrees,                                    bind_tree_list = list(), nsubtree = 1)"},{"path":"https://github.com/yuxiaochen11/LineageCast/articles/C.elegans.html","id":"evaluation","dir":"Articles","previous_headings":"","what":"Evaluation","title":"C.elegans","text":"","code":"cat(\"Nye Similarity (higher is better): \", TreeDist::NyeSimilarity(tree_ct, Tree_Merge, normalize = TRUE), \"\\n\") ## Nye Similarity (higher is better):  0.4277195 cat(\"Tree Distance (lower is better): \", TreeDist::TreeDistance(tree_ct, Tree_Merge), \"\\n\") ## Tree Distance (lower is better):  0.6552464 cat(\"RF Distance (lower is better): \", RF.dist(tree_ct, Tree_Merge, normalize = TRUE), \"\\n\") ## RF Distance (lower is better):  0.882199"},{"path":"https://github.com/yuxiaochen11/LineageCast/articles/C.elegans.html","id":"downstream-analysis","dir":"Articles","previous_headings":"","what":"Downstream Analysis","title":"C.elegans","text":"","code":"tree <- phylogenetic_tree(Tree_Merge, N_char, barcodes[match(Tree_Merge$tip.label, rownames(barcodes)), ],                            ncells = NULL, Nnodes = NULL, edges = NULL) ##  ## Setting initial dates... ## Fitting in progress... get a first set of estimates ##          (Penalised) log-lik = -18301.69  ## Optimising rates... dates... -18301.69  ## Optimising rates... dates... -840.22  ## Optimising rates... dates... -827.1494  ## Optimising rates... dates... -827.1494  ##  ## log-Lik = -799.7401  ## PHIIC = 3914.66"},{"path":"https://github.com/yuxiaochen11/LineageCast/articles/C.elegans.html","id":"mapping-cell-states-and-visualize","dir":"Articles","previous_headings":"","what":"Mapping Cell States and Visualize","title":"C.elegans","text":"","code":"tree$states_chr <- name_index$cell_type[match(tree$tip.label, state_slingshot$cell_id)] tree$states <- as.numeric(factor(name_index$cell_type[match(tree$tip.label, state_slingshot$cell_id)])) tree$states[is.na(tree$states)] <- max(tree$states, na.rm = TRUE) + 1  tree_tidy <- full_join(Tree_Merge, tibble(label = tree$tip.label, state = as.factor(tree$states_chr)), by = \"label\") tree_tidy@phylo$edge.length <- tree$edge.length  p <- ggtree(tree_tidy, layout = \"circular\", size = 0.1) +   geom_fruit(geom = geom_tile, aes(fill = state),              col = \"white\", offset = 0.1,              width = 0.1, lwd = 0) +   ggtitle(\"C.elegans Phylogeny\") +   labs(fill = \"Cell state\") p"},{"path":"https://github.com/yuxiaochen11/LineageCast/articles/C.elegans.html","id":"phylogenetic-auto-correlation-analysis","dir":"Articles","previous_headings":"","what":"Phylogenetic Auto-correlation Analysis","title":"C.elegans","text":"","code":"W <- one_node_tree_dist(tree) X <- catMat(tree$states) treexcor <- xcor(X, W) tree_phy_cor <- treexcor$phy_cor Idf <- reshape2::melt(tree_phy_cor, value.name = \"I\") Zdf <- reshape2::melt(treexcor$Z.score, value.name = \"Z\") df <- full_join(Idf, Zdf, by = c(\"Var1\", \"Var2\")) df <- df %>% mutate(Var1 = as.factor(Var1), Var2 = as.factor(Var2))"},{"path":"https://github.com/yuxiaochen11/LineageCast/articles/C.elegans.html","id":"generating-heritability-bar-plots","dir":"Articles","previous_headings":"","what":"Generating Heritability Bar Plots","title":"C.elegans","text":"","code":"herit1 <- df %>%   filter(Var1 == Var2) %>%   ggplot(aes(x = Var1, y = I, fill = Var1)) +   geom_bar(stat = \"identity\") +   ylim(c(-0.07, 1.45)) +   theme_classic() +   labs(fill = \"Cell state\", y = \"Phylogenetic auto-correlation\", x = \"Cell state\") +   ggtitle(\"Cell state heritability\", subtitle = \"auto-correlation\")  maxz <- max(abs(df$Z)) herit2 <- df %>%   filter(Var1 == Var2) %>%   ggplot(aes(x = Var1, y = Z, fill = Var1)) +   geom_bar(stat = \"identity\") +   ylim(c(-maxz, maxz)) +   theme_classic() +   labs(fill = \"Cell state\", y = \"Phylogenetic auto-correlation\\n(z score)\", x = \"Cell state\") +   geom_hline(yintercept = qnorm(0.05, lower.tail = FALSE), col = \"black\", lty = 2) +   ggtitle(\"Cell state heritability\", subtitle = \"z score\")  herit1 herit2"},{"path":"https://github.com/yuxiaochen11/LineageCast/articles/C.elegans.html","id":"plotting-heatmap-of-phylogenetic-correlation","dir":"Articles","previous_headings":"","what":"Plotting Heatmap of Phylogenetic Correlation","title":"C.elegans","text":"","code":"df %>%   ggplot(aes(x = Var1, y = Var2, fill = I)) +   geom_tile(col = \"white\") +   scale_fill_distiller(palette = 5, type = \"div\", limits = c(-1.7, 1.7)) +   theme_classic() +   scale_y_discrete(limits = rev) +   labs(fill = \"Phylogenetic\\ncorrelation\", x = \"Cell state\", y = \"Cell state\") +   theme(aspect.ratio = 1) leaf_states<-name_index$cell_type names(leaf_states) <- name_index$id depth_df <- compute_node_depths(Tree_Merge) states <- c('Arcade_cell', 'Body_wall_muscle', 'Ciliated_amphid_neuron', 'Ciliated_non_amphid_neuron', 'Glia', 'Hypodermis', 'Intestine', 'Seam_cell') #H_path <- compute_entropy_path(Tree_Merge, leaf_states, \"Body_wall_muscle\" )  entropy_path_list <- lapply(states, function(cell_type) {   df <- compute_entropy_path(Tree_Merge, leaf_states, cell_type)   df$cell_type <- cell_type     return(df) }) entropy_path_combined <- do.call(rbind, entropy_path_list) theme_set(theme_light()) ggplot(entropy_path_combined, aes(x = depth, y = entropy ))+        stat_smooth(method = \"loess\", color = \"#7C4296\", size = 0.7) +        geom_point(color = \"#C692C0\", alpha = 1)+        theme(axis.text.x = element_text(angle =45, vjust =1, hjust =1))+        labs(x =\"Depth\", y =\"Entropy\")+        facet_wrap(~ cell_type, nrow = 2, ncol = 4)+        theme(axis.text = element_text(color = \"black\", size = 5.5, family = 'Arial'),               axis.title = element_text(family = 'Arial', size = 6),              strip.background = element_rect(fill = \"#DCDDDD\"),              strip.text = element_text(family = \"Arial\", face = \"bold\", color = \"black\",                                       hjust = 0, size = 6))+        theme(plot.margin=unit(c(3.5, 1, 3.5, 1),'cm'))+        theme(panel.grid.major = element_line(color = \"#DCDDDD\", size = 0.25),             panel.grid.minor = element_line(color = \"#EFEFEF\", size = 0.1)) entropy_path_list <- lapply(states, function(cell_type) {   H_slope <- compute_entropy_slope(tree, leaf_states, cell_type, interval = 3)   slope_df <- data.frame(id = 1:length(H_slope), slope = H_slope, cell_type = cell_type, sign_label = sign(H_slope))   slope_df$sign_label <- factor(sign(slope_df$slope), levels = c(-1, 0, 1),                         labels = c(\"neg\", \"zero\", \"pos\"))   return(slope_df) }) entropy_slope_combined <- do.call(rbind, entropy_path_list) ggplot(entropy_slope_combined, aes(x = id, y = cell_type)) +       geom_point(aes(size = abs(slope), color = sign_label), shape = 16) +       scale_color_manual(values = c(\"pos\" = \"#F29537\", \"neg\" = \"#90C3DA\", \"zero\" = \"grey\")) +       theme(axis.text.y = element_text(angle = 0, vjust = 1, hjust = 0, size = 6),             axis.text.x = element_text(color = \"black\", size = 6, family = 'Arial'),             strip.background = element_rect(fill = \"#DCDDDD\"))+       theme(plot.margin=unit(c(4.5, 0.5, 4.5, 0.5),'cm'))+       labs(x = NULL, y = NULL)+       theme(panel.grid.major = element_line(color = \"#DCDDDD\", size = 0.25),             panel.grid.minor = element_line(color = \"#EFEFEF\", size = 0.1))"},{"path":"https://github.com/yuxiaochen11/LineageCast/articles/Mouse_embroy.html","id":"loading-package-functions","dir":"Articles","previous_headings":"","what":"Loading package functions","title":"Mouse_embryo","text":"","code":"library(FateScape) library(PATH) library(Seurat) library(ggplot2) library(phangorn) library(ggtreeExtra) library(ggtree) library(TreeTools) library(ape) library(readxl) library(devtools) library(tidytree) library(DCLEAR)"},{"path":"https://github.com/yuxiaochen11/LineageCast/articles/Mouse_embroy.html","id":"inputscrna-seq-data-lineage-barcodes","dir":"Articles","previous_headings":"Loading package functions","what":"Input(scRNA-seq data & lineage barcodes)","title":"Mouse_embryo","text":"","code":"# Load filtered mouse embryo scRNA-seq data # Uncomment the following line if using the unfiltered data load(\"data/mouse_embryo/mouse_embroy_filtered.RData\")  # Extract count data from the Seurat object counts <- GetAssayData(object = mouse_embroy_filtered, slot = \"counts\") ngenes <- nrow(counts) ncells <- ncol(counts)  # Load filtered lineage barcode data load(\"data/mouse_embryo/barcode_filtered.RData\") N_char <- ncol(barcode_filtered)  # Standardize cell IDs for both counts and barcode data colnames(counts) <- rownames(barcode_filtered) <- paste(\"cell\", 1:ncells, sep = \"_\")"},{"path":"https://github.com/yuxiaochen11/LineageCast/articles/Mouse_embroy.html","id":"visualision","dir":"Articles","previous_headings":"Loading package functions","what":"Visualision","title":"Mouse_embryo","text":"","code":"# Extract UMAP embeddings from the Seurat object umap_res <- Embeddings(mouse_embroy_filtered, reduction = \"umap\") umap_df <- data.frame(UMAP1 = umap_res[, 1], UMAP2 = umap_res[, 2])  # Create a UMAP plot colored by cell states p <- ggplot(umap_df) +   geom_point(aes(x = UMAP1, y = UMAP2, color = mouse_embroy_filtered$cell_states)) +   scale_color_brewer(palette = \"Set1\") +   labs(color = \"Cluster ID\") +   xlab(\"UMAP 1\") +   ylab(\"UMAP 2\") +   theme(axis.text = element_text(size = 15),         axis.title = element_text(size = 20),         legend.title = element_text(size = 15),         legend.text = element_text(size = 15))  p"},{"path":"https://github.com/yuxiaochen11/LineageCast/articles/Mouse_embroy.html","id":"construction-of-the-cell-state-tree","dir":"Articles","previous_headings":"Loading package functions","what":"Construction of the cell state tree","title":"Mouse_embryo","text":"","code":"# Assign cell IDs to the UMAP results rownames(umap_res) <- paste(\"cell\", 1:nrow(barcode_filtered), sep = \"_\")  # Extract cell state labels from the Seurat object labels_new <- as.character(mouse_embroy_filtered$cell_states)  # Define state lineage paths state_lineages <- list() state_lineages[[1]] <- c(\"Ectoderm\", \"Endoderm\") state_lineages[[2]] <- c(\"Ectoderm\", \"Mesoderm\") names(state_lineages) <- paste0(\"L\", 1:length(state_lineages))"},{"path":"https://github.com/yuxiaochen11/LineageCast/articles/Mouse_embroy.html","id":"barcode-imputation-and-grouping-cells-by-state-lineage","dir":"Articles","previous_headings":"Loading package functions","what":"Barcode imputation and grouping cells by state lineage","title":"Mouse_embryo","text":"","code":"# Perform barcode imputation to address stochastic dropout barcodes <- dropout_imputation_alter(as.matrix(barcode_filtered), N_char, ncells, ceiling(N_char * 0.8))  # Create a data frame of cell IDs and their corresponding cell state labels state <- data.frame(cell_id = paste(\"cell\", 1:ncells, sep = \"_\"),                     cluster = labels_new)  # Generate state lineage information sl_info <- state_lineage_info(state_lineages, ncells, state, barcodes) state_lineage <- sl_info[[1]] cell_lineages <- sl_info[[2]] barcodes_lineages <- sl_info[[3]] state_labels_lineages <- sl_info[[4]]"},{"path":"https://github.com/yuxiaochen11/LineageCast/articles/Mouse_embroy.html","id":"reconstruction-of-the-sub-cell-division-trees","dir":"Articles","previous_headings":"Loading package functions","what":"Reconstruction of the sub cell division trees","title":"Mouse_embryo","text":"","code":"# Construct initial sub-cell division trees based on state lineages and barcode data Trees_initial <- initial_tree_construction(state_lineages, barcodes_lineages)  # Refine the initial subtrees using a maximum likelihood framework and subtree exchanges refined_subtree <- subtree_refinement(Trees_initial, state_lineages, barcodes_lineages,N_char, state_labels_lineages,lambda1 = 0.1, lambda2 = 0.9,maxIter = 100, repeat_time = 10) bestsubtree <- refined_subtree[[1]]"},{"path":"https://github.com/yuxiaochen11/LineageCast/articles/Mouse_embroy.html","id":"removing-duplicated-leaf-nodes-from-the-refined-subtrees","dir":"Articles","previous_headings":"Loading package functions","what":"Removing duplicated leaf nodes from the refined subtrees","title":"Mouse_embryo","text":"","code":"bestsubtree <- drop_duplicated_tips(bestsubtree, barcodes_lineages, cell_lineages,state_lineage, alpha = 1.5, beta = 1.5)"},{"path":"https://github.com/yuxiaochen11/LineageCast/articles/Mouse_embroy.html","id":"decomposition-and-reassembly-of-sub-cell-division-trees","dir":"Articles","previous_headings":"Loading package functions","what":"Decomposition and reassembly of sub-cell division trees","title":"Mouse_embryo","text":"","code":"# Generate root barcodes for each subtree from the refined best sub-cell division trees subtrees_rootbar <- get_subtree_root_barcodes(bestsubtree, state, barcodes, length(state_lineages))  # Compute the common mutation matrix between the subtrees' root barcodes CM <- common_mutation_matrix(subtrees_rootbar)  # Compute ranking and weight matrices based on mutation patterns Nodes_rank <- subtrees_rank(CM)[[1]] Nodes_weight <- subtrees_rank(CM)[[2]]  # Decompose refined subtrees into sub-subtrees for further merging subsubtrees <- decompose_subtrees(bestsubtree, state, barcodes, length(state_lineages))  # Merge the sub-cell division trees using Ward's method Tree_Merge <- merge_subcell_trees_ward(subtrees_rootbar, subsubtrees)"},{"path":"https://github.com/yuxiaochen11/LineageCast/articles/Mouse_embroy.html","id":"inference-of-the-plasticity-and-heritability-of-cell-states-","dir":"Articles","previous_headings":"","what":"Inference of the plasticity and heritability of cell states.","title":"Mouse_embryo","text":"","code":"# # Use the merged tree from previous steps for downstream analysis tree <- Tree_Merge  # Map cell state labels to the tree tips tree$states_chr <- labels_new[match(tree$tip.label, state$cell_id)] tree$states <- as.numeric(factor(labels_new[match(tree$tip.label, state$cell_id)])) tree$states[is.na(tree$states)] <- max(tree$states, na.rm = TRUE)   # Compute phylogenetic distances and auto-correlation metrics W <- one_node_tree_dist(tree) X <- catMat(tree$states) treexcor <- xcor(X, W) tree_phy_cor <- treexcor$phy_cor Idf <- reshape2::melt(tree_phy_cor, value.name = \"I\") Zdf <- reshape2::melt(treexcor$Z.score, value.name = \"Z\") df <- full_join(Idf, Zdf, by = c(\"Var1\", \"Var2\")) df <- df %>% mutate(Var1 = as.factor(Var1), Var2 = as.factor(Var2))  # Phylogenetic auto-correlation (heritability) bar plots herit1 <- df %>%   filter(Var1 == Var2) %>%   ggplot(aes(x = Var1, y = I, fill = Var1)) +   geom_bar(stat = \"identity\") +   ylim(c(-0.1, 1)) +   theme_classic() +   labs(fill = \"Cell state\", y = \"Phylogenetic auto-correlation\", x = \"Cell state\") +   ggtitle(\"Cell state heritability\", subtitle = \"auto-correlation\")  maxz <- max(abs(df$Z)) herit2 <- df %>%   filter(Var1 == Var2) %>%   ggplot(aes(x = Var1, y = Z, fill = Var1)) +   geom_bar(stat = \"identity\") +   ylim(c(-maxz, maxz)) +   theme_classic() +   labs(fill = \"Cell state\", y = \"Phylogenetic auto-correlation\\n(z score)\", x = \"Cell state\") +   geom_hline(yintercept = qnorm(0.05, lower.tail = FALSE), col = \"black\", lty = 2) +   ggtitle(\"Cell state heritability\", subtitle = \"z score\")  # Display the heritability plots side by side herit1 + herit2 # Plot a heatmap of the phylogenetic correlation between cell states df %>%   ggplot(aes(x = Var1, y = Var2, fill = I)) +   geom_tile(col = \"white\") +   scale_fill_distiller(palette = 5, type = \"div\", limits = c(-1, 1)) +   theme_classic() +   scale_y_discrete(limits = rev) +   labs(fill = \"Phylogenetic\\ncorrelation\", x = \"Cell state\", y = \"Cell state\") +   theme(aspect.ratio = 1) leaf_states <- state$cluster names(leaf_states) <- state$cell_id depth_df <- compute_node_depths(Tree_Merge) states <- unique(leaf_states) theme_set(theme_light()) ggplot(entropy_path_combined, aes(x = depth, y = entropy ))+        geom_point(color = \"#C692C0\", alpha = 0.1)+        stat_smooth(method = 'gam' ,  color = \"#7C4296\", size = 0.7) +        #geom_line(color = \"#7C4296\", size = 0.7)+        theme(axis.text.x = element_text(angle =0, vjust =1, hjust =1))+        labs(x =\"Depth\", y =\"Entropy\")+        facet_wrap(~ cell_type, nrow = 1, ncol = 3)+        theme(axis.text = element_text(color = \"black\", size = 5.5, family = 'Arial'),               axis.title = element_text(family = 'Arial', size = 6),              strip.background = element_rect(fill = \"#DCDDDD\"),              strip.text = element_text(family = \"Arial\", face = \"bold\", color = \"black\",                                       hjust = 0, size = 6))+        theme(plot.margin=unit(c(4.7, 0.8, 4.7, 0.8),'cm'))+        theme(panel.grid.major = element_line(color = \"#DCDDDD\", size = 0.25),             panel.grid.minor = element_line(color = \"#EFEFEF\", size = 0.1)) entropy_path_list <- lapply(states, function(cell_type) {   entropy_df <- entropy_path_combined[entropy_path_combined$cell_type == cell_type,]   valid <- !is.na(entropy_df$entropy)   H <- entropy_df$entropy[valid]   idx <- seq(1,length(H),20)   H_slope <- H[idx + 20] - H[idx]   slope_df <- data.frame(id = 1:length(H_slope), slope = H_slope, cell_type = cell_type, sign_label = sign(H_slope))   slope_df$sign_label <- factor(sign(slope_df$slope), levels = c(-1, 0, 1),                         labels = c(\"neg\", \"zero\", \"pos\"))   slope_df <- slope_df[c(1:40),]   slope_df$id <- slope_df$id*20   return(slope_df) }) entropy_slope_combined <- do.call(rbind, entropy_path_list) entropy_slope_combined <- entropy_slope_combined[!is.na(entropy_slope_combined['cell_type']),] entropy_slope_combined <- entropy_slope_combined[!is.na(entropy_slope_combined['slope']),] ggplot(entropy_slope_combined, aes(x = id, y = cell_type)) +       geom_point(aes(size = abs(slope), color = sign_label), shape = 16) +       scale_color_manual(values = c(\"pos\" = \"#F29537\", \"neg\" = \"#90C3DA\", \"zero\" = \"grey\")) +       theme(axis.text.y = element_text(angle = 0, vjust = 1, hjust = 0, size = 6),             axis.text.x = element_text(color = \"black\", size = 6, family = 'Arial'),             strip.background = element_rect(fill = \"#DCDDDD\"))+       theme(plot.margin=unit(c(5.5, 0.2, 5.5, 0.2),'cm'))+       labs(x = NULL, y = NULL)+       theme(panel.grid.major = element_line(color = \"#DCDDDD\", size = 0.25),             panel.grid.minor = element_line(color = \"#EFEFEF\", size = 0.1))"},{"path":"https://github.com/yuxiaochen11/LineageCast/articles/Simulation.html","id":"loading-package-functions","dir":"Articles","previous_headings":"","what":"Loading package functions","title":"Simulation","text":"","code":"library(FateScape) library(phangorn) library(TreeTools)"},{"path":"https://github.com/yuxiaochen11/LineageCast/articles/Simulation.html","id":"loading-lineage-barcodes-and-cell-states","dir":"Articles","previous_headings":"","what":"Loading Lineage Barcodes and Cell States","title":"Simulation","text":"","code":"# Load simulated data load('data/Simulation/cifs.RData')  # Extract barcode data (all barcodes) barcodes_all <- cifs[[7]] ncells <- 512   N_char <- 12 p_ds <- 0.2 r_n <- ceiling(N_char * 0.7)  # Extract barcode data for leaves (raw cell barcodes) cif_leaves <- list() for (i in 1:3) {   cif_leaves[[i]] <- cifs[[1]][[i]][1:ncells, ] }  # Load true counts for RNA data load('data/Simulation/counts.RData')  # Extract cell state information from simulation results states_leaves <- cifs[[2]][1:ncells, ] state <- data.frame(cell_id = paste(\"cell\", states_leaves[,\"cellID\"], sep = \"_\"),                     cluster = as.character(states_leaves[,\"cluster\"]))  # Process ground truth cell division tree tree_ct <- cifs[[4]] for (i in 1:ncells) {   tree_ct$tip.label[i] <- paste(\"cell\", substr(tree_ct$tip.label[i], 2, nchar(tree_ct$tip.label[i])), sep = \"_\") }"},{"path":"https://github.com/yuxiaochen11/LineageCast/articles/Simulation.html","id":"preprocessing-lineage-barcodes","dir":"Articles","previous_headings":"","what":"Preprocessing Lineage Barcodes","title":"Simulation","text":"","code":"# Extract initial barcode matrix for cells barcodes_initial <- barcodes_all[1:ncells, ] rownames(barcodes_initial) <- paste(\"cell\", states_leaves[, 4], sep = \"_\")  # Introduce stochastic dropout to simulate missing barcode data barcodes_dropout <- stochastic_dropout(barcodes_initial, p_ds)  # Impute missing values in barcode data barcodes <- dropout_imputation_alter(barcodes_dropout, N_char, ncells, r_n) # Optionally: Check the number of unique barcodes # sum(!duplicated(barcodes))"},{"path":"https://github.com/yuxiaochen11/LineageCast/articles/Simulation.html","id":"grouping-cells-by-state-lineage","dir":"Articles","previous_headings":"","what":"Grouping Cells by State Lineage","title":"Simulation","text":"","code":"# Set state lineage state_lineages <- list() state_lineages[[\"L1\"]] <- c(4, 5, 6, 7, 8, 9, 1) state_lineages[[\"L2\"]] <- c(4, 5, 6, 7, 8, 10, 2) state_lineages[[\"L3\"]] <- c(4, 5, 6, 11, 12, 13, 3)  # Generate state lineage information using simulated cell states and imputed barcodes sl_info <- state_lineage_info(state_lineages, ncells, state, barcodes) state_lineage <- sl_info[[1]] cell_lineages <- sl_info[[2]] barcodes_lineages <- sl_info[[3]] state_labels_lineages <- sl_info[[4]]"},{"path":"https://github.com/yuxiaochen11/LineageCast/articles/Simulation.html","id":"reconstructing-sub-cell-division-trees","dir":"Articles","previous_headings":"","what":"Reconstructing Sub-Cell Division Trees","title":"Simulation","text":"","code":"# Record simulation start time for performance tracking start_time <- proc.time()  # Construct initial sub-cell division trees based on state lineages and barcode data Trees_initial <- initial_tree_construction(state_lineages, barcodes_lineages)  # Refine subtrees using maximum likelihood and subtree exchanges LiterateRefine <- subtree_refinement(Trees_initial, state_lineages, barcodes_lineages,                                      N_char, state_labels_lineages,                                      lambda1 = 0.1, lambda2 = 0.9,                                      maxIter = 100, repeat_time = 10) bestsubtree <- LiterateRefine[[1]]  # Remove duplicated leaf nodes from the refined subtrees bestsubtree <- drop_duplicated_tips(bestsubtree, barcodes_lineages, cell_lineages,                                     state_lineage, alpha = 1.5, beta = 1.5)"},{"path":"https://github.com/yuxiaochen11/LineageCast/articles/Simulation.html","id":"integrating-sub-cell-division-trees","dir":"Articles","previous_headings":"","what":"Integrating Sub-Cell Division Trees","title":"Simulation","text":"","code":"# Generate root barcodes for each refined subtree subtrees_rootbar <- get_subtree_root_barcodes(bestsubtree, state, barcodes, length(state_lineages))  # Compute the common mutation matrix among subtree root barcodes CM <- common_mutation_matrix(subtrees_rootbar) Nodes_rank <- subtrees_rank(CM)[[1]] Nodes_weight <- subtrees_rank(CM)[[2]]  # Decompose refined subtrees into sub-subtrees subsubtrees <- decompose_subtrees(bestsubtree, state, barcodes, length(state_lineages))  # Merge sub-cell division trees using ordered merging Tree_Merge <- merge_subcell_trees_ordered(CM, Nodes_rank, Nodes_weight, subsubtrees,                                           bind_tree_list = list(), nsubtree = 1)  # Record total processing time FateScape_totaltime <- proc.time() - start_time"},{"path":"https://github.com/yuxiaochen11/LineageCast/articles/Simulation.html","id":"evaluating-the-reconstructed-tree","dir":"Articles","previous_headings":"","what":"Evaluating the Reconstructed Tree","title":"Simulation","text":"","code":"# Evaluate the merged tree against the ground truth tree cat(\"Nye Similarity (higher is better): \", TreeDist::NyeSimilarity(tree_ct, Tree_Merge, normalize = TRUE), \"\\n\") ## Nye Similarity (higher is better):  0.4966637 cat(\"Tree Distance (lower is better): \", TreeDist::TreeDistance(tree_ct, Tree_Merge), \"\\n\") ## Tree Distance (lower is better):  0.5672668 cat(\"RF Distance (lower is better): \", RF.dist(tree_ct, Tree_Merge, normalize = TRUE), \"\\n\") ## RF Distance (lower is better):  0.827112"},{"path":"https://github.com/yuxiaochen11/LineageCast/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Xiaochen Yu. Author, maintainer.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Yu X (2025). FateScape: FateScape Reconstructs Cell Division Tree Using Single-cell Transcriptome Data Lineage Barcode. R package version 1.0, , https://github.com/yuxiaochen11/FateScape.","code":"@Manual{,   title = {FateScape: FateScape Reconstructs Cell Division Tree Using Single-cell Transcriptome Data And Lineage Barcode},   author = {Xiaochen Yu},   year = {2025},   note = {R package version 1.0, },   url = {https://github.com/yuxiaochen11/FateScape}, }"},{"path":"https://github.com/yuxiaochen11/LineageCast/index.html","id":"fatescape","dir":"","previous_headings":"","what":"LineageCast","title":"LineageCast","text":"FateScape leverages multimodal single-cell sequencing infer cell division trees using maximum likelihood framework. combining CRISPR/Cas9-based lineage tracing technology single-cell transcriptome sequencing data, FateScape can reconstruct cell division history infer plasticity inheritance cell states.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"LineageCast","text":"repository provides comprehensive suite R functions reconstructing cell division trees. tools repository enable users : Refine lineage barcodes addressing stochastic dropout issues. Construct sub-cell division trees along different state lineages. Optimize sub-cell division trees using maximum likelihood framework combined subtree exchanges. Integrate sub-cell division trees complete cell division tree. Infer plasticity heritability cell states. functions designed help researchers analyze single-cell lineage data, explore cell lineage evolution, gain insights cell division patterns.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"LineageCast","text":"install use functions, follow steps:","code":"devtools::install_github(‘yuxiaochen11/FateScape')"},{"path":"https://github.com/yuxiaochen11/LineageCast/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"LineageCast","text":"object paired single-cell gene expression lineage barcodes data, can start right away inferring regulatory network:","code":"# Load required libraries library(FateScape) library(PATH)  # Load scRNA-seq data load(\"RNA_object.RData\")  # Load lineage barcode data load(\"barcode_object.RData\")  # psedo-trajectory inference umap_res <- Embeddings(RNA_object, reduction = \"umap\") labels_new <- as.character(RNA_object$cell_states)  sce <- slingshot(data = umap_res,clusterLabels = labels_new, dist.method = \"simple\",start.clus = \"Ectoderm\") state_lineages <- slingLineages(sce)  # Barcode imputation barcodes <- imputation_dropout_alter(as.matrix(barcode_object), ...)  #Construction of the  sub-cell division trees  Trees_initial <- initial_tree_construction(state_lineages, barcodes) bestsubtree <- subtree_refinement(Trees_initial, ...)  #Removing duplicated leaf nodes across sub-cell division trees bestsubtree <- drop_duplicated_tips(bestsubtree,...)  #Decomposition and reassembly of sub-cell division trees subtrees_rootbar <- get_subtree_root_barcodes(bestsubtree, ...) decomposed_subtrees <- decompose_subtrees(bestsubtree, ...)  # Integration of the sub-cell division trees cell_division_tree <- merge_subcell_trees_ward(subtrees_rootbar, decomposed_subtrees)"},{"path":"https://github.com/yuxiaochen11/LineageCast/index.html","id":"more","dir":"","previous_headings":"","what":"More","title":"LineageCast","text":"info FateScape can found website. can find API reference number tutorial vignettes give introduction use FateScape effectively.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"LineageCast","text":"use FateScape research, please cite accompanying paper: Yu, Xiaochen (2025). FateScape: Reconstructing cell division history phenotypic dynamics single-cell barcode transcriptomic data. GitHub. https://github.com/yuxiaochen11/FateScape use following BibTeX entry:","code":"@software{FateScape,   author  = {Yu, Xiaochen},   title   = {FateScape: Reconstructing cell division history and phenotypic dynamics from single-cell barcode and transcriptomic data},   year    = {2025},   url     = {https://github.com/yuxiaochen11/FateScape}, }"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/ancestor_inference.html","id":null,"dir":"Reference","previous_headings":"","what":"Infer ancestral lineage barcodes and cell states — ancestor_inference","title":"Infer ancestral lineage barcodes and cell states — ancestor_inference","text":"Infer ancestral lineage barcodes cell states","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/ancestor_inference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infer ancestral lineage barcodes and cell states — ancestor_inference","text":"","code":"ancestor_inference(tree, N_char, barcodes, cell_state_labels, state_lineages)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/ancestor_inference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Infer ancestral lineage barcodes and cell states — ancestor_inference","text":"tree sub-cell division tree. N_char Number characters lineage barcode. barcodes Lineage barcodes leaf nodes. cell_state_labels Cell states leaf nodes. state_lineages list state lineages.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/ancestor_inference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Infer ancestral lineage barcodes and cell states — ancestor_inference","text":"list containing ancestral lineage barcodes cell states.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/ancestor_inference_time_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Infer ancestral barcodes with time scaling — ancestor_inference_time_scale","title":"Infer ancestral barcodes with time scaling — ancestor_inference_time_scale","text":"Infer ancestral barcodes time scaling","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/ancestor_inference_time_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infer ancestral barcodes with time scaling — ancestor_inference_time_scale","text":"","code":"ancestor_inference_time_scale(tree, N_char, barcodes)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/ancestor_inference_time_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Infer ancestral barcodes with time scaling — ancestor_inference_time_scale","text":"tree sub-cell division tree. N_char Total number sites. barcodes matrix lineage barcodes leaf nodes.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/ancestor_inference_time_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Infer ancestral barcodes with time scaling — ancestor_inference_time_scale","text":"matrix barcodes leaf internal nodes, internal node's barcode inferred children.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/barcodes_grouping.html","id":null,"dir":"Reference","previous_headings":"","what":"Group label barcodes (For imputation) — barcodes_grouping","title":"Group label barcodes (For imputation) — barcodes_grouping","text":"Group label barcodes (imputation)","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/barcodes_grouping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group label barcodes (For imputation) — barcodes_grouping","text":"","code":"barcodes_grouping(label_barcodes, remain_sites, n)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/barcodes_grouping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group label barcodes (For imputation) — barcodes_grouping","text":"label_barcodes matrix label barcodes. remain_sites matrix remaining sites. n n==1, return grouped label barcodes; otherwise, return grouped remaining sites.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/barcodes_grouping.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group label barcodes (For imputation) — barcodes_grouping","text":"list grouped barcodes.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/barcode_similarity_likelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate barcode shift probability — barcode_similarity_likelihood","title":"Calculate barcode shift probability — barcode_similarity_likelihood","text":"Calculate barcode shift probability","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/barcode_similarity_likelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate barcode shift probability — barcode_similarity_likelihood","text":"","code":"barcode_similarity_likelihood(tree, N_char, edges, barcodes)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/barcode_similarity_likelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate barcode shift probability — barcode_similarity_likelihood","text":"tree Sub-cell division tree. N_char Total number sites. edges Edges sub-cell division tree. barcodes Lineage barcodes.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/barcode_similarity_likelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate barcode shift probability — barcode_similarity_likelihood","text":"Score barcode shifts.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/combined_likelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate combined tree score based on cell state and barcode shift scores — combined_likelihood","title":"Calculate combined tree score based on cell state and barcode shift scores — combined_likelihood","text":"Calculate combined tree score based cell state barcode shift scores","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/combined_likelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate combined tree score based on cell state and barcode shift scores — combined_likelihood","text":"","code":"combined_likelihood(   tree,   barcodes,   N_char,   cell_state_labels,   state_lineages,   state_score = NULL,   barcode_score = NULL,   lambda_1 = lambda1,   lambda_2 = lambda2 )"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/combined_likelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate combined tree score based on cell state and barcode shift scores — combined_likelihood","text":"tree Sub-cell division tree. barcodes Lineage barcodes. N_char Total number sites. cell_state_labels Vector cell state labels. state_lineages List state lineages. state_score Precomputed cell state score (optional). barcode_score Precomputed barcode score (optional). lambda_1 Weight cell state score. lambda_2 Weight barcode score.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/combined_likelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate combined tree score based on cell state and barcode shift scores — combined_likelihood","text":"Combined score cell state barcode shifts.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/common_mutation_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a common mutation matrix between root barcodes of sub-subtrees — common_mutation_matrix","title":"Build a common mutation matrix between root barcodes of sub-subtrees — common_mutation_matrix","text":"Build common mutation matrix root barcodes sub-subtrees","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/common_mutation_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a common mutation matrix between root barcodes of sub-subtrees — common_mutation_matrix","text":"","code":"common_mutation_matrix(subtrees_rootbar)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/common_mutation_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a common mutation matrix between root barcodes of sub-subtrees — common_mutation_matrix","text":"subtrees_rootbar list root barcodes sub-subtrees.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/common_mutation_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a common mutation matrix between root barcodes of sub-subtrees — common_mutation_matrix","text":"matrix common mutation counts pair sub-subtree root barcodes.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/compute_entropy_at_depth.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute normalized entropy of a given cell state at a specific depth — compute_entropy_at_depth","title":"Compute normalized entropy of a given cell state at a specific depth — compute_entropy_at_depth","text":"Compute normalized entropy given cell state specific depth","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/compute_entropy_at_depth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute normalized entropy of a given cell state at a specific depth — compute_entropy_at_depth","text":"","code":"compute_entropy_at_depth(   tree,   leaf_states,   state_label,   node_depth_df,   depth_level )"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/compute_entropy_at_depth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute normalized entropy of a given cell state at a specific depth — compute_entropy_at_depth","text":"tree phylogenetic tree class \"phylo\". leaf_states named vector mapping tip labels state labels. state_label single value indicating state compute entropy . node_depth_df data.frame returned compute_node_depths(). depth_level integer depth compute entropy.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/compute_entropy_at_depth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute normalized entropy of a given cell state at a specific depth — compute_entropy_at_depth","text":"numeric 0 1 giving normalized Shannon entropy counts given state among descendants depth, NA nodes counts.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/compute_entropy_at_depth_alter.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute normalized entropy at a given depth using iterative descendant search — compute_entropy_at_depth_alter","title":"Compute normalized entropy at a given depth using iterative descendant search — compute_entropy_at_depth_alter","text":"Compute normalized entropy given depth using iterative descendant search","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/compute_entropy_at_depth_alter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute normalized entropy at a given depth using iterative descendant search — compute_entropy_at_depth_alter","text":"","code":"compute_entropy_at_depth_alter(   tree,   leaf_states,   state_label,   node_depth_df,   depth_level )"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/compute_entropy_at_depth_alter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute normalized entropy at a given depth using iterative descendant search — compute_entropy_at_depth_alter","text":"tree phylogenetic tree class \"phylo\". leaf_states named vector mapping tip labels state labels. state_label single value indicating state compute entropy . node_depth_df data.frame returned compute_node_depths(). depth_level integer depth compute entropy.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/compute_entropy_at_depth_alter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute normalized entropy at a given depth using iterative descendant search — compute_entropy_at_depth_alter","text":"numeric 0 1 giving normalized Shannon entropy NA applicable.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/compute_entropy_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the entropy trajectory (path) over all depths — compute_entropy_path","title":"Compute the entropy trajectory (path) over all depths — compute_entropy_path","text":"Compute entropy trajectory (path) depths","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/compute_entropy_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the entropy trajectory (path) over all depths — compute_entropy_path","text":"","code":"compute_entropy_path(tree, leaf_states, state_label)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/compute_entropy_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the entropy trajectory (path) over all depths — compute_entropy_path","text":"tree phylogenetic tree class \"phylo\". leaf_states named vector mapping tip labels state labels. state_label single value indicating state compute entropy .","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/compute_entropy_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the entropy trajectory (path) over all depths — compute_entropy_path","text":"data.frame columns: depth: integer depths 1 max-1, entropy: normalized entropy depth.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/compute_entropy_path_alter.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the entropy trajectory using iterative descendant search — compute_entropy_path_alter","title":"Compute the entropy trajectory using iterative descendant search — compute_entropy_path_alter","text":"Compute entropy trajectory using iterative descendant search","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/compute_entropy_path_alter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the entropy trajectory using iterative descendant search — compute_entropy_path_alter","text":"","code":"compute_entropy_path_alter(tree, leaf_states, state_label)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/compute_entropy_path_alter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the entropy trajectory using iterative descendant search — compute_entropy_path_alter","text":"tree phylogenetic tree class \"phylo\". leaf_states named vector mapping tip labels state labels. state_label single value indicating state compute entropy .","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/compute_entropy_path_alter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the entropy trajectory using iterative descendant search — compute_entropy_path_alter","text":"data.frame columns depth entropy.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/compute_entropy_slope.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute discrete entropy slope over a sliding interval — compute_entropy_slope","title":"Compute discrete entropy slope over a sliding interval — compute_entropy_slope","text":"Compute discrete entropy slope sliding interval","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/compute_entropy_slope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute discrete entropy slope over a sliding interval — compute_entropy_slope","text":"","code":"compute_entropy_slope(tree, leaf_states, state_label, interval = 3)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/compute_entropy_slope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute discrete entropy slope over a sliding interval — compute_entropy_slope","text":"tree phylogenetic tree class \"phylo\". leaf_states named vector mapping tip labels state labels. state_label single value indicating state compute entropy . interval Integer specifying step compute slope (default 3).","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/compute_entropy_slope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute discrete entropy slope over a sliding interval — compute_entropy_slope","text":"numeric vector entropy differences (H[t+interval] - H[t]) NA number depths ≤ interval.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/compute_node_depths.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute depths of all nodes in a phylogenetic tree — compute_node_depths","title":"Compute depths of all nodes in a phylogenetic tree — compute_node_depths","text":"Compute depths nodes phylogenetic tree","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/compute_node_depths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute depths of all nodes in a phylogenetic tree — compute_node_depths","text":"","code":"compute_node_depths(tree)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/compute_node_depths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute depths of all nodes in a phylogenetic tree — compute_node_depths","text":"tree phylogenetic tree class \"phylo\".","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/compute_node_depths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute depths of all nodes in a phylogenetic tree — compute_node_depths","text":"data.frame columns: node: node tip indices (1 Ntip + Nnode), depth: distance (number edges) root.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/count_common_mutations.html","id":null,"dir":"Reference","previous_headings":"","what":"Count common mutations between two barcodes — count_common_mutations","title":"Count common mutations between two barcodes — count_common_mutations","text":"Count common mutations two barcodes","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/count_common_mutations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count common mutations between two barcodes — count_common_mutations","text":"","code":"count_common_mutations(barcode1, barcode2, N_char = NULL)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/count_common_mutations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count common mutations between two barcodes — count_common_mutations","text":"barcode1 vector representing first barcode. barcode2 vector representing second barcode. N_char Optional. Number sites consider.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/count_common_mutations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count common mutations between two barcodes — count_common_mutations","text":"Count sites mutation (excluding zeros).","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/count_uncommon_mutations.html","id":null,"dir":"Reference","previous_headings":"","what":"Count uncommon mutations between two barcodes — count_uncommon_mutations","title":"Count uncommon mutations between two barcodes — count_uncommon_mutations","text":"Count uncommon mutations two barcodes","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/count_uncommon_mutations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count uncommon mutations between two barcodes — count_uncommon_mutations","text":"","code":"count_uncommon_mutations(barcode1, barcode2, N_char = NULL)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/count_uncommon_mutations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count uncommon mutations between two barcodes — count_uncommon_mutations","text":"barcode1 vector representing first barcode. barcode2 vector representing second barcode. N_char Optional. Number sites consider.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/count_uncommon_mutations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count uncommon mutations between two barcodes — count_uncommon_mutations","text":"Count sites different mutations (nonzero).","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/decompose_subtrees.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate sub-subtrees from best subtrees — decompose_subtrees","title":"Generate sub-subtrees from best subtrees — decompose_subtrees","text":"Generate sub-subtrees best subtrees","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/decompose_subtrees.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate sub-subtrees from best subtrees — decompose_subtrees","text":"","code":"decompose_subtrees(bestsubtree, state, barcodes, l_sl)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/decompose_subtrees.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate sub-subtrees from best subtrees — decompose_subtrees","text":"bestsubtree list best subtrees. state Data frame cell state information. barcodes Matrix lineage barcodes. l_sl Length (number) state lineages.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/decompose_subtrees.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate sub-subtrees from best subtrees — decompose_subtrees","text":"vector (list) sub-subtrees.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/distance_with_dropout.html","id":null,"dir":"Reference","previous_headings":"","what":"Define Hamming distance between lineage barcodes with dropout (For imputation) — distance_with_dropout","title":"Define Hamming distance between lineage barcodes with dropout (For imputation) — distance_with_dropout","text":"Define Hamming distance lineage barcodes dropout (imputation)","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/distance_with_dropout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define Hamming distance between lineage barcodes with dropout (For imputation) — distance_with_dropout","text":"","code":"distance_with_dropout(barcode_1, barcode_2, N_char = NULL)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/distance_with_dropout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define Hamming distance between lineage barcodes with dropout (For imputation) — distance_with_dropout","text":"barcode_1 character vector representing first barcode. barcode_2 character vector representing second barcode. N_char Optional. Number positions consider barcode.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/distance_with_dropout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define Hamming distance between lineage barcodes with dropout (For imputation) — distance_with_dropout","text":"Hamming distance two barcodes dropout.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/dropout_imputation.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute stochastic dropout of lineage barcodes — dropout_imputation","title":"Impute stochastic dropout of lineage barcodes — dropout_imputation","text":"Impute stochastic dropout lineage barcodes","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/dropout_imputation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute stochastic dropout of lineage barcodes — dropout_imputation","text":"","code":"dropout_imputation(barcodes_dropout, N_char, r_n)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/dropout_imputation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute stochastic dropout of lineage barcodes — dropout_imputation","text":"barcodes_dropout Lineage barcodes stochastic dropout. N_char Total number sites. r_n Number sites used label barcodes.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/dropout_imputation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Impute stochastic dropout of lineage barcodes — dropout_imputation","text":"Lineage barcodes imputation.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/dropout_imputation_alter.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute stochastic dropout in lineage barcodes — dropout_imputation_alter","title":"Impute stochastic dropout in lineage barcodes — dropout_imputation_alter","text":"Impute stochastic dropout lineage barcodes","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/dropout_imputation_alter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute stochastic dropout in lineage barcodes — dropout_imputation_alter","text":"","code":"dropout_imputation_alter(barcodes_dropout, N_char, ncells, r_n)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/dropout_imputation_alter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute stochastic dropout in lineage barcodes — dropout_imputation_alter","text":"barcodes_dropout matrix lineage barcodes dropout values. N_char Number characters (sites) barcode. ncells Number cells. r_n Number selected sites reference.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/dropout_imputation_alter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Impute stochastic dropout in lineage barcodes — dropout_imputation_alter","text":"matrix lineage barcodes imputation.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/drop_duplicated_tips.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop duplicated leaf nodes from tree list — drop_duplicated_tips","title":"Drop duplicated leaf nodes from tree list — drop_duplicated_tips","text":"Drop duplicated leaf nodes tree list","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/drop_duplicated_tips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop duplicated leaf nodes from tree list — drop_duplicated_tips","text":"","code":"drop_duplicated_tips(   tree_list,   barcodes,   cell_lineages,   state_lineage,   alpha,   beta )"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/drop_duplicated_tips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop duplicated leaf nodes from tree list — drop_duplicated_tips","text":"tree_list List raw sub-cell division trees. barcodes Matrix lineage barcodes. cell_lineages Cell lineages (unused current function kept compatibility). state_lineage list element vector state lineage labels cell. alpha Alpha parameter computing sibling distance. beta Beta parameter computing sibling distance.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/drop_duplicated_tips.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop duplicated leaf nodes from tree list — drop_duplicated_tips","text":"Modified tree_list duplicated leaf nodes dropped.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/drop_non_minimum_tips.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop non-minimum tips from tree list — drop_non_minimum_tips","title":"Drop non-minimum tips from tree list — drop_non_minimum_tips","text":"Drop non-minimum tips tree list","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/drop_non_minimum_tips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop non-minimum tips from tree list — drop_non_minimum_tips","text":"","code":"drop_non_minimum_tips(tree_list, dist_list, cell)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/drop_non_minimum_tips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop non-minimum tips from tree list — drop_non_minimum_tips","text":"tree_list List trees. dist_list Data frame columns \"lineage\" \"dist\" containing distances. cell Cell ID (tip) dropped.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/drop_non_minimum_tips.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop non-minimum tips from tree list — drop_non_minimum_tips","text":"Modified tree_list dropping specified tip trees best (minimum-distance) lineage.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/find_node_depth.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the depth of a given node in a tree — find_node_depth","title":"Find the depth of a given node in a tree — find_node_depth","text":"Find depth given node tree","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/find_node_depth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the depth of a given node in a tree — find_node_depth","text":"","code":"find_node_depth(tree, node, ncells)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/find_node_depth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the depth of a given node in a tree — find_node_depth","text":"tree tree object containing \"edge\" \"edge.length\" elements. node node (integer) whose depth computed. ncells Number leaf nodes tree; root assumed ncells + 1.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/find_node_depth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the depth of a given node in a tree — find_node_depth","text":"depth (sum edge lengths) given node root.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/format_tree_newick.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert tree information into Newick (.nwk) format — format_tree_newick","title":"Convert tree information into Newick (.nwk) format — format_tree_newick","text":"Convert tree information Newick (.nwk) format","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/format_tree_newick.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert tree information into Newick (.nwk) format — format_tree_newick","text":"","code":"format_tree_newick(root_node, edges)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/format_tree_newick.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert tree information into Newick (.nwk) format — format_tree_newick","text":"root_node current root node. edges two-column matrix data frame edges (parent column 1, child column 2).","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/format_tree_newick.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert tree information into Newick (.nwk) format — format_tree_newick","text":"character string Newick format.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/format_tree_newick_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert tree information into Newick (.nwk) format including time information — format_tree_newick_time","title":"Convert tree information into Newick (.nwk) format including time information — format_tree_newick_time","text":"Convert tree information Newick (.nwk) format including time information","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/format_tree_newick_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert tree information into Newick (.nwk) format including time information — format_tree_newick_time","text":"","code":"format_tree_newick_time(root_node, edges, Time)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/format_tree_newick_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert tree information into Newick (.nwk) format including time information — format_tree_newick_time","text":"root_node current root node. edges two-column matrix data frame edges (parent column 1, child column 2). Time vector time values corresponding vertices; vertex names taken V(graph)$name.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/format_tree_newick_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert tree information into Newick (.nwk) format including time information — format_tree_newick_time","text":"character string Newick format branch lengths (time information).","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/getDescendants.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all descendants of a node in a phylogenetic tree (recursive) — getDescendants","title":"Get all descendants of a node in a phylogenetic tree (recursive) — getDescendants","text":"Get descendants node phylogenetic tree (recursive)","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/getDescendants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all descendants of a node in a phylogenetic tree (recursive) — getDescendants","text":"","code":"getDescendants(tree, node)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/getDescendants.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all descendants of a node in a phylogenetic tree (recursive) — getDescendants","text":"tree phylogenetic tree class \"phylo\", edge matrix. node integer giving node number collect descendants.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/getDescendants.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all descendants of a node in a phylogenetic tree (recursive) — getDescendants","text":"integer vector descendant node/leaf numbers (excluding input node).","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/getDescendants_iter.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all descendants of a node in a phylogenetic tree (iterative) — getDescendants_iter","title":"Get all descendants of a node in a phylogenetic tree (iterative) — getDescendants_iter","text":"Get descendants node phylogenetic tree (iterative)","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/getDescendants_iter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all descendants of a node in a phylogenetic tree (iterative) — getDescendants_iter","text":"","code":"getDescendants_iter(tree, node)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/getDescendants_iter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all descendants of a node in a phylogenetic tree (iterative) — getDescendants_iter","text":"tree phylogenetic tree class \"phylo\". node integer giving node number collect descendants.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/getDescendants_iter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all descendants of a node in a phylogenetic tree (iterative) — getDescendants_iter","text":"integer vector descendant node/leaf numbers (excluding input node).","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/get_first_element.html","id":null,"dir":"Reference","previous_headings":"","what":"Get first element (actually returns the second element) — get_first_element","title":"Get first element (actually returns the second element) — get_first_element","text":"Get first element (actually returns second element)","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/get_first_element.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get first element (actually returns the second element) — get_first_element","text":"","code":"get_first_element(x)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/get_first_element.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get first element (actually returns the second element) — get_first_element","text":"x list.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/get_first_element.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get first element (actually returns the second element) — get_first_element","text":"second element x.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/get_root_barcode.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the root barcode from a tree — get_root_barcode","title":"Get the root barcode from a tree — get_root_barcode","text":"Get root barcode tree","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/get_root_barcode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the root barcode from a tree — get_root_barcode","text":"","code":"get_root_barcode(x)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/get_root_barcode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the root barcode from a tree — get_root_barcode","text":"x tree object root.barcode element.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/get_root_barcode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the root barcode from a tree — get_root_barcode","text":"root barcode.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/get_subtree_celltypes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get subtree cell types — get_subtree_celltypes","title":"Get subtree cell types — get_subtree_celltypes","text":"Get subtree cell types","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/get_subtree_celltypes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get subtree cell types — get_subtree_celltypes","text":"","code":"get_subtree_celltypes(tree_groups)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/get_subtree_celltypes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get subtree cell types — get_subtree_celltypes","text":"tree_groups list containing two groups trees. first group, element tree object; second group, element index referring tree global \"subsubtrees\" list.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/get_subtree_celltypes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get subtree cell types — get_subtree_celltypes","text":"list cell type vectors subtree, names \"subtree_1\", \"subtree_2\", etc.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/get_subtree_root_barcodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get subtree root barcodes for each best subtree in a lineage — get_subtree_root_barcodes","title":"Get subtree root barcodes for each best subtree in a lineage — get_subtree_root_barcodes","text":"Get subtree root barcodes best subtree lineage","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/get_subtree_root_barcodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get subtree root barcodes for each best subtree in a lineage — get_subtree_root_barcodes","text":"","code":"get_subtree_root_barcodes(bestsubtree, state, barcodes, l_sl)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/get_subtree_root_barcodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get subtree root barcodes for each best subtree in a lineage — get_subtree_root_barcodes","text":"bestsubtree list best subtrees. state Data frame cell state information. barcodes Matrix lineage barcodes. l_sl Length (number) state lineages.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/get_subtree_root_barcodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get subtree root barcodes for each best subtree in a lineage — get_subtree_root_barcodes","text":"vector root barcodes sub-subtrees.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/get_tips.html","id":null,"dir":"Reference","previous_headings":"","what":"Get tip labels from a tree — get_tips","title":"Get tip labels from a tree — get_tips","text":"Get tip labels tree","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/get_tips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get tip labels from a tree — get_tips","text":"","code":"get_tips(x)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/get_tips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get tip labels from a tree — get_tips","text":"x tree object.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/get_tips.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get tip labels from a tree — get_tips","text":"vector tip labels.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/get_unique_celltypes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get unique cell types from subtrees — get_unique_celltypes","title":"Get unique cell types from subtrees — get_unique_celltypes","text":"Get unique cell types subtrees","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/get_unique_celltypes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get unique cell types from subtrees — get_unique_celltypes","text":"","code":"get_unique_celltypes(subtree_celltypes)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/get_unique_celltypes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get unique cell types from subtrees — get_unique_celltypes","text":"subtree_celltypes list cell type vectors (e.g., obtained get_subtree_celltypes).","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/get_unique_celltypes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get unique cell types from subtrees — get_unique_celltypes","text":"list element corresponds cell type appears exactly one subtree. element names indicate cell type value name subtree contains .","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/group_subcell_trees.html","id":null,"dir":"Reference","previous_headings":"","what":"Group sub-cell division trees for merging based on common mutations — group_subcell_trees","title":"Group sub-cell division trees for merging based on common mutations — group_subcell_trees","text":"Group sub-cell division trees merging based common mutations","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/group_subcell_trees.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group sub-cell division trees for merging based on common mutations — group_subcell_trees","text":"","code":"group_subcell_trees(   CM,   Nodes_rank,   Nodes_weight,   subsubtrees,   bind_tree_list,   nsubtree )"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/group_subcell_trees.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group sub-cell division trees for merging based on common mutations — group_subcell_trees","text":"CM Common mutation matrix. Nodes_rank Matrix nodes ranking. Nodes_weight Matrix nodes weight. subsubtrees List sub-subtrees. bind_tree_list List trees bind. nsubtree Current number/index subtrees.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/group_subcell_trees.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group sub-cell division trees for merging based on common mutations — group_subcell_trees","text":"list containing merged tree group remaining nodes.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/hamming_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Hamming Distance Matrix for Barcodes — hamming_distance","title":"Compute Hamming Distance Matrix for Barcodes — hamming_distance","text":"Compute Hamming Distance Matrix Barcodes","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/hamming_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Hamming Distance Matrix for Barcodes — hamming_distance","text":"","code":"hamming_distance(barcodes)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/hamming_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Hamming Distance Matrix for Barcodes — hamming_distance","text":"barcodes matrix row represents barcode.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/hamming_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Hamming Distance Matrix for Barcodes — hamming_distance","text":"Hamming distance matrix computed input barcodes.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/improved_hamming_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate improved Hamming distance between two lineage barcodes — improved_hamming_distance","title":"Calculate improved Hamming distance between two lineage barcodes — improved_hamming_distance","text":"Calculate improved Hamming distance two lineage barcodes","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/improved_hamming_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate improved Hamming distance between two lineage barcodes — improved_hamming_distance","text":"","code":"improved_hamming_distance(barcode1, barcode2, alpha, beta, N_char = NULL)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/improved_hamming_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate improved Hamming distance between two lineage barcodes — improved_hamming_distance","text":"barcode1 vector representing first lineage barcode. barcode2 vector representing second lineage barcode. alpha positive number; two sites mutation, total distance reduced alpha. beta number greater 1; two sites different mutations, total distance increased beta. N_char Optional. number sites consider; defaults length barcode1.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/improved_hamming_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate improved Hamming distance between two lineage barcodes — improved_hamming_distance","text":"improved Hamming distance.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/initial_tree_construction.html","id":null,"dir":"Reference","previous_headings":"","what":"Reconstruct initial sub-cell division trees based solely on lineage barcodes — initial_tree_construction","title":"Reconstruct initial sub-cell division trees based solely on lineage barcodes — initial_tree_construction","text":"Reconstruct initial sub-cell division trees based solely lineage barcodes","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/initial_tree_construction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reconstruct initial sub-cell division trees based solely on lineage barcodes — initial_tree_construction","text":"","code":"initial_tree_construction(state_lineages, barcodes_lineages)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/initial_tree_construction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reconstruct initial sub-cell division trees based solely on lineage barcodes — initial_tree_construction","text":"state_lineages list state lineages. barcodes_lineages list barcode matrices corresponding state lineage.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/initial_tree_construction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reconstruct initial sub-cell division trees based solely on lineage barcodes — initial_tree_construction","text":"list initial sub-cell division trees reconstructed lineage barcodes.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/lable_imputation.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute label barcodes — lable_imputation","title":"Impute label barcodes — lable_imputation","text":"Impute label barcodes","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/lable_imputation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute label barcodes — lable_imputation","text":"","code":"lable_imputation(label)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/lable_imputation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute label barcodes — lable_imputation","text":"label matrix label barcodes.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/lable_imputation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Impute label barcodes — lable_imputation","text":"Label barcodes imputing stochastic dropout.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/merge_subcell_trees_ordered.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge sub-cell division trees in order based on nodes rank and weight — merge_subcell_trees_ordered","title":"Merge sub-cell division trees in order based on nodes rank and weight — merge_subcell_trees_ordered","text":"Merge sub-cell division trees order based nodes rank weight","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/merge_subcell_trees_ordered.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge sub-cell division trees in order based on nodes rank and weight — merge_subcell_trees_ordered","text":"","code":"merge_subcell_trees_ordered(   CM,   Nodes_rank,   Nodes_weight,   subsubtrees,   bind_tree_list,   nsubtree )"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/merge_subcell_trees_ordered.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge sub-cell division trees in order based on nodes rank and weight — merge_subcell_trees_ordered","text":"CM Common mutation matrix. Nodes_rank Matrix nodes ranking. Nodes_weight Matrix nodes weight. subsubtrees List sub-subtrees. bind_tree_list List trees bind. nsubtree Current number/index subtrees.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/merge_subcell_trees_ordered.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge sub-cell division trees in order based on nodes rank and weight — merge_subcell_trees_ordered","text":"merged cell division tree.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/merge_subcell_trees_ward.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge sub-cell division trees using Ward's method — merge_subcell_trees_ward","title":"Merge sub-cell division trees using Ward's method — merge_subcell_trees_ward","text":"Merge sub-cell division trees using Ward's method","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/merge_subcell_trees_ward.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge sub-cell division trees using Ward's method — merge_subcell_trees_ward","text":"","code":"merge_subcell_trees_ward(subtrees_rootbar, subsubtrees)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/merge_subcell_trees_ward.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge sub-cell division trees using Ward's method — merge_subcell_trees_ward","text":"subtrees_rootbar list root barcodes sub-subtrees. subsubtrees list sub-subtrees.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/merge_subcell_trees_ward.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge sub-cell division trees using Ward's method — merge_subcell_trees_ward","text":"merged cell division tree.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/nodes_clustering.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a tree topology using Ward's clustering method — nodes_clustering","title":"Generate a tree topology using Ward's clustering method — nodes_clustering","text":"Generate tree topology using Ward's clustering method","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/nodes_clustering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a tree topology using Ward's clustering method — nodes_clustering","text":"","code":"nodes_clustering(distance_matrix)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/nodes_clustering.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a tree topology using Ward's clustering method — nodes_clustering","text":"distance_matrix Hamming distance matrix.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/nodes_clustering.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a tree topology using Ward's clustering method — nodes_clustering","text":"phylogenetic tree obtained clustering using Ward's method, edge lengths set 1.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/nodes_sampling.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the probability of each node being selected as the root for subtree exchange — nodes_sampling","title":"Calculate the probability of each node being selected as the root for subtree exchange — nodes_sampling","text":"Calculate probability node selected root subtree exchange","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/nodes_sampling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the probability of each node being selected as the root for subtree exchange — nodes_sampling","text":"","code":"nodes_sampling(tree, edges, cell_state_labels, barcodes, state_lineages)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/nodes_sampling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the probability of each node being selected as the root for subtree exchange — nodes_sampling","text":"tree Sub-cell division tree. edges Edge matrix sub-cell division tree. cell_state_labels Vector cell state labels. barcodes Matrix lineage barcodes. state_lineages List state lineage paths.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/nodes_sampling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the probability of each node being selected as the root for subtree exchange — nodes_sampling","text":"probability vector node.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/phylogenetic_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a time-scaled phylogenetic tree based on lineage barcodes — phylogenetic_tree","title":"Compute a time-scaled phylogenetic tree based on lineage barcodes — phylogenetic_tree","text":"Compute time-scaled phylogenetic tree based lineage barcodes","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/phylogenetic_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a time-scaled phylogenetic tree based on lineage barcodes — phylogenetic_tree","text":"","code":"phylogenetic_tree(   tree,   N_char,   barcodes,   ncells = NULL,   Nnodes = NULL,   edges = NULL )"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/phylogenetic_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a time-scaled phylogenetic tree based on lineage barcodes — phylogenetic_tree","text":"tree sub-cell division tree. N_char Total number sites. barcodes matrix lineage barcodes. ncells Optional. Number cells (defaults number tip labels tree). Nnodes Optional. Number nodes (defaults 2 * ncells - 2). edges Optional. Edge information (ignored NULL).","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/phylogenetic_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a time-scaled phylogenetic tree based on lineage barcodes — phylogenetic_tree","text":"time-scaled phylogenetic tree.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/prune_cell_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Subdivide a sub-cell division tree into sub-subtrees — prune_cell_tree","title":"Subdivide a sub-cell division tree into sub-subtrees — prune_cell_tree","text":"Subdivide sub-cell division tree sub-subtrees","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/prune_cell_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subdivide a sub-cell division tree into sub-subtrees — prune_cell_tree","text":"","code":"prune_cell_tree(sub_tree, state, barcodes, subid, itr_time)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/prune_cell_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subdivide a sub-cell division tree into sub-subtrees — prune_cell_tree","text":"sub_tree sub-cell division tree. state data frame cell state information. barcodes matrix lineage barcodes. subid Identifier sub-cell division tree. itr_time Iteration time (recursive calls).","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/prune_cell_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subdivide a sub-cell division tree into sub-subtrees — prune_cell_tree","text":"list sub-subtrees.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/remaining_sites_imputation.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute remaining sites — remaining_sites_imputation","title":"Impute remaining sites — remaining_sites_imputation","text":"Impute remaining sites","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/remaining_sites_imputation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute remaining sites — remaining_sites_imputation","text":"","code":"remaining_sites_imputation(remain_s, alpha)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/remaining_sites_imputation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute remaining sites — remaining_sites_imputation","text":"remain_s matrix remaining sites. alpha Threshold dropout ratio decide imputation occur.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/remaining_sites_imputation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Impute remaining sites — remaining_sites_imputation","text":"Remaining sites imputing stochastic dropout.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/sibling_cells_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the distance between sibling cells — sibling_cells_distance","title":"Find the distance between sibling cells — sibling_cells_distance","text":"Find distance sibling cells","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/sibling_cells_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the distance between sibling cells — sibling_cells_distance","text":"","code":"sibling_cells_distance(cell, tree, lineage, alpha, beta)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/sibling_cells_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the distance between sibling cells — sibling_cells_distance","text":"cell tip label (cell ID) find sibling distance. tree sub-cell division tree. lineage state lineage identifier (e.g., \"L1\") cell belongs . alpha Alpha parameter improved Hamming distance. beta Beta parameter improved Hamming distance.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/sibling_cells_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the distance between sibling cells — sibling_cells_distance","text":"improved Hamming distance sibling cells.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/state_lineage_info.html","id":null,"dir":"Reference","previous_headings":"","what":"State lineage information — state_lineage_info","title":"State lineage information — state_lineage_info","text":"State lineage information","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/state_lineage_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"State lineage information — state_lineage_info","text":"","code":"state_lineage_info(state_lineages, ncells, state, barcodes)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/state_lineage_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"State lineage information — state_lineage_info","text":"state_lineages named list state lineage paths (e.g., \"L1\", \"L2\", ...). ncells Number cells. state data frame containing cell states (columns \"cluster\" \"cell_id\"). barcodes matrix lineage barcodes cell.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/state_lineage_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"State lineage information — state_lineage_info","text":"list following elements: state_lineage list indicating state lineage(s) cell belongs . cell_lineages list mapping state lineage corresponding cell IDs. barcodes_lineages list barcode matrices cells state lineage. state_labels_lineages list state labels (clusters) cells state lineage.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/state_transition_likelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate state shift probability for cell states — state_transition_likelihood","title":"Calculate state shift probability for cell states — state_transition_likelihood","text":"Calculate state shift probability cell states","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/state_transition_likelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate state shift probability for cell states — state_transition_likelihood","text":"","code":"state_transition_likelihood(   tree,   edges,   barcodes,   cell_state_labels,   state_lineages )"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/state_transition_likelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate state shift probability for cell states — state_transition_likelihood","text":"tree Sub-cell division tree. edges Edges sub-cell division tree. barcodes Lineage barcodes. cell_state_labels Vector cell state labels. state_lineages List state lineages.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/state_transition_likelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate state shift probability for cell states — state_transition_likelihood","text":"Score cell state shifts.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/stochastic_dropout.html","id":null,"dir":"Reference","previous_headings":"","what":"Stochastic dropout generation — stochastic_dropout","title":"Stochastic dropout generation — stochastic_dropout","text":"Generate stochastic dropouts lineage barcodes.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/stochastic_dropout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stochastic dropout generation — stochastic_dropout","text":"","code":"stochastic_dropout(barcodes_initial, p_ds)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/stochastic_dropout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stochastic dropout generation — stochastic_dropout","text":"barcodes_initial matrix barcodes containing inheritable dropout. p_ds Stochastic dropout rate.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/stochastic_dropout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stochastic dropout generation — stochastic_dropout","text":"initial barcodes stochastic dropouts applied.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/subtrees_rank.html","id":null,"dir":"Reference","previous_headings":"","what":"Rank subtrees based on common mutation counts — subtrees_rank","title":"Rank subtrees based on common mutation counts — subtrees_rank","text":"Rank subtrees based common mutation counts","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/subtrees_rank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rank subtrees based on common mutation counts — subtrees_rank","text":"","code":"subtrees_rank(CM)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/subtrees_rank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rank subtrees based on common mutation counts — subtrees_rank","text":"CM common mutation matrix.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/subtrees_rank.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rank subtrees based on common mutation counts — subtrees_rank","text":"list containing nodes rank matrix nodes weight matrix.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/subtrees_swapping.html","id":null,"dir":"Reference","previous_headings":"","what":"Swap subtrees in a sub-cell division tree — subtrees_swapping","title":"Swap subtrees in a sub-cell division tree — subtrees_swapping","text":"Swap subtrees sub-cell division tree","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/subtrees_swapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Swap subtrees in a sub-cell division tree — subtrees_swapping","text":"","code":"subtrees_swapping(   tree,   edges,   cell_state_labels,   barcodes,   state_lineages,   tree_renew_prob = NULL )"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/subtrees_swapping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Swap subtrees in a sub-cell division tree — subtrees_swapping","text":"tree Sub-cell division tree. edges Edge matrix tree. cell_state_labels Vector cell state labels. barcodes Matrix lineage barcodes. state_lineages List state lineage paths. tree_renew_prob Optional probability vector selecting nodes subtree exchange.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/subtrees_swapping.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Swap subtrees in a sub-cell division tree — subtrees_swapping","text":"tree swapping selected subtrees.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/subtree_refinement.html","id":null,"dir":"Reference","previous_headings":"","what":"Refine sub-cell division trees based on lineage barcodes and cell states — subtree_refinement","title":"Refine sub-cell division trees based on lineage barcodes and cell states — subtree_refinement","text":"Refine sub-cell division trees based lineage barcodes cell states","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/subtree_refinement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Refine sub-cell division trees based on lineage barcodes and cell states — subtree_refinement","text":"","code":"subtree_refinement(   Trees_initial,   state_lineages,   barcodes_lineages,   N_char,   state_labels_lineages,   lambda1,   lambda2,   maxIter = 100,   repeat_time = 10 )"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/subtree_refinement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Refine sub-cell division trees based on lineage barcodes and cell states — subtree_refinement","text":"Trees_initial List initial sub-cell division trees (state lineage). state_lineages List state lineage paths. barcodes_lineages List barcode matrices per state lineage. N_char Total number sites. state_labels_lineages List state labels per state lineage. lambda1 Weight cell state score. lambda2 Weight barcode score. maxIter Maximum number iterations. repeat_time Number iterations required convergence.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/subtree_refinement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Refine sub-cell division trees based on lineage barcodes and cell states — subtree_refinement","text":"list containing: bestsubtree List refined sub-cell division trees (one per state lineage). bestsubtreescore List corresponding best scores refined tree. total_time Total running time.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/subtree_root_bar.html","id":null,"dir":"Reference","previous_headings":"","what":"Get root barcodes from a list of trees — subtree_root_bar","title":"Get root barcodes from a list of trees — subtree_root_bar","text":"Get root barcodes list trees","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/subtree_root_bar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get root barcodes from a list of trees — subtree_root_bar","text":"","code":"subtree_root_bar(x)"},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/subtree_root_bar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get root barcodes from a list of trees — subtree_root_bar","text":"x list tree objects.","code":""},{"path":"https://github.com/yuxiaochen11/LineageCast/reference/subtree_root_bar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get root barcodes from a list of trees — subtree_root_bar","text":"list root barcodes.","code":""}]
